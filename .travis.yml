language: cpp

sudo: required

os:
  - linux
  - osx

osx_image: xcode8.2

dist: xerus

compiler:
  - gcc
  - clang

env:
  - DECENT_CMAKE_GENERATOR="Unix Makefiles" DECENT_CMAKE_BUILD_TYPE="Release"
  - DECENT_CMAKE_GENERATOR="Unix Makefiles" DECENT_CMAKE_BUILD_TYPE="Debug"
  - DECENT_CMAKE_GENERATOR="Xcode" DECENT_CMAKE_BUILD_TYPE="Release"
  - DECENT_CMAKE_GENERATOR="Xcode" DECENT_CMAKE_BUILD_TYPE="Debug"

matrix:
  exclude:
    - os: osx
      compiler: gcc
    - os: linux
      env: DECENT_CMAKE_GENERATOR="Xcode" DECENT_CMAKE_BUILD_TYPE="Release"
    - os: linux
      env: DECENT_CMAKE_GENERATOR="Xcode" DECENT_CMAKE_BUILD_TYPE="Debug"



# FIXME: remove these hacks once all repos are public.
# Handle git submodules manually.
git:
  submodules: false
# Replace HTTPS URLs of private repos in .gitmodules to SSH to workaround auth errors, then initialize submodules manually.
before_install:
  - perl -pi -e 's/https\:\/\/github\.com\/DECENTfoundation\/DECENT-Network\.wiki\.git/git\@github\.com\:DECENTfoundation\/DECENT-Network\.wiki\.git/' .gitmodules
  - perl -pi -e 's/https\:\/\/github\.com\/DECENTfoundation\/pbc\.git/git\@github\.com\:DECENTfoundation\/pbc\.git/' .gitmodules
  - perl -pi -e 's/https\:\/\/github\.com\/DECENTfoundation\/DECENT-GUI\.git/git\@github\.com\:DECENTfoundation\/DECENT-GUI\.git/' .gitmodules
  - git submodule update --init --recursive



install:
# FIXME: hardcoded assumption that we run on Ubuntu.
  - if [ "$TRAVIS_OS_NAME" == "linux" ] ; then sudo apt-get update -qq && sudo apt-get install -qq build-essential autotools-dev automake autoconf libtool make cmake checkinstall gcc g++ clang flex bison doxygen gettext git google-perftools qt5-default libgoogle-perftools-dev libreadline-dev libcrypto++-dev libgmp-dev libdb-dev libdb++-dev libssl-dev libncurses5-dev libboost-all-dev libcurl4-openssl-dev python-dev libicu-dev libbz2-dev ; fi
# FIXME: hardcoded assumption that we run on Ubuntu 14 so we build Boost and CMake.
# Build Boost.
  - if [ "$TRAVIS_OS_NAME" == "linux" ] ; then mkdir -p third-party && cd third-party && wget https://sourceforge.net/projects/boost/files/boost/1.60.0/boost_1_60_0.tar.gz && tar xvf boost_1_60_0.tar.gz && mkdir boost-1.60.0_prefix && cd boost_1_60_0 && export BOOST_ROOT=(realpath ../boost-1.60.0_prefix) && ./bootstrap.sh --prefix=$BOOST_ROOT &> bootstrap.out.txt && ./b2 install &> b2.out.txt && cd .. && rm -rf boost_1_60_0 ; fi
# Build CMake.
  - if [ "$TRAVIS_OS_NAME" == "linux" ] ; then mkdir -p third-party && cd third-party && wget https://cmake.org/files/v3.7/cmake-3.7.2.tar.gz && tar xvf cmake-3.7.2.tar.gz && mkdir cmake-3.7.2_prefix && cd cmake-3.7.2 && export CMAKE_ROOT=$(realpath ../cmake-3.7.2_prefix) && ./configure --prefix=$CMAKE_ROOT && make &> make.out.txt && make install && cd .. && rm -rf cmake-3.7.2 && export PATH=$CMAKE_ROOT/bin:$PATH ; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] ; then brew update && brew install doxygen && brew upgrade && brew cleanup && brew doctor && brew tap homebrew/versions && brew update && brew install automake autoconf libtool cmake berkeley-db boost160 qt5 cryptopp libtorrent-rasterbar doxygen byacc flex gettext git pbc gmp ipfs openssl readline gperftools && brew doctor ; fi

script:
  - DECENT_CMAKE_TARGET_ALL="all"
  - DECENT_CMAKE_TARGET_INSTALL="install"
  - DECENT_CMAKE_EXTRA_BUILD_PARAMS="-j 3 -l 3.0 VERBOSE=1"
  - if [ "$DECENT_CMAKE_GENERATOR" == "Xcode" ] ; then unset CC && unset CXX && DECENT_CMAKE_TARGET_ALL="ALL_BUILD" && DECENT_CMAKE_EXTRA_BUILD_PARAMS="-jobs 3 -verbose" ; fi
  - mkdir -p build && cd build && cmake -D CMAKE_BUILD_TYPE="$DECENT_CMAKE_BUILD_TYPE" -G "$DECENT_CMAKE_GENERATOR" .. && cmake --build . --target "$DECENT_CMAKE_TARGET_ALL" -- $DECENT_CMAKE_EXTRA_BUILD_PARAMS && cmake --build . --target "$DECENT_CMAKE_TARGET_INSTALL"

notifications:
  email:
    on_success: change
    on_failure: always
